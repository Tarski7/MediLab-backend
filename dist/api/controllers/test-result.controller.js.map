{"version":3,"sources":["../../../src/api/controllers/test-result.controller.js"],"names":["testResults","_id","name","date","Date","findAll","req","res","next","json","create","body","price","description","status","err","TestResult","then","testResult","catch"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,cAAc,CAChB,EAAEC,KAAK,GAAP,EAAYC,MAAM,YAAlB,EAAgCC,MAAM,IAAIC,IAAJ,EAAtC,EADgB,EAEhB,EAAEH,KAAK,GAAP,EAAYC,MAAM,aAAlB,EAAiCC,MAAM,IAAIC,IAAJ,EAAvC,EAFgB,EAGhB,EAAEH,KAAK,GAAP,EAAYC,MAAM,0BAAlB,EAA8CC,MAAM,IAAIC,IAAJ,EAApD,EAHgB,CAApB;;kBAMe;AACXC,WADW,mBACHC,GADG,EACEC,GADF,EACOC,IADP,EACa;AACpBD,YAAIE,IAAJ,CAAST,WAAT;AACH,KAHU;AAIXU,UAJW,kBAIJJ,GAJI,EAICC,GAJD,EAIM;AAAA,wBAC0BD,IAAIK,IAD9B;AAAA,YACRT,IADQ,aACRA,IADQ;AAAA,YACFC,IADE,aACFA,IADE;AAAA,YACIS,KADJ,aACIA,KADJ;AAAA,YACWC,WADX,aACWA,WADX;;AAEb,YAAI,CAACX,IAAL,EAAW;AACP,mBAAOK,IAAIO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAACM,KAAK,wBAAN,EAArB,CAAP;AACH;AACD,YAAI,CAACZ,IAAL,EAAW;AACP,mBAAOI,IAAIO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAACM,KAAK,wBAAN,EAArB,CAAP;AACH;AACD,YAAI,CAACH,KAAL,EAAY;AACR,mBAAOL,IAAIO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,EAACM,KAAK,yBAAN,EAArB,CAAP;AACH;;AAEDC,6BAAWN,MAAX,CAAkB,EAACR,UAAD,EAAOC,UAAP,EAAaS,YAAb,EAAoBC,wBAApB,EAAlB,EACKI,IADL,CACU;AAAA,mBAAcV,IAAIE,IAAJ,CAASS,UAAT,CAAd;AAAA,SADV,EAEKC,KAFL,CAEW;AAAA,mBAAOZ,IAAIO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBM,GAArB,CAAP;AAAA,SAFX;AAGH;AAnBU,C","file":"test-result.controller.js","sourcesContent":["import TestResult from \"../models/test-result.model\";\r\n\r\nconst testResults = [\r\n    { _id: \"1\", name: \"Morfologia\", date: new Date() },\r\n    { _id: \"2\", name: \"Spirometria\", date: new Date() },\r\n    { _id: \"3\", name: \"Test antygenowy Covid-19\", date: new Date() }\r\n];\r\n\r\nexport default {\r\n    findAll(req, res, next) {\r\n        res.json(testResults);\r\n    },\r\n    create(req, res) {\r\n        let {name, date, price, description} = req.body;\r\n        if (!name) {\r\n            return res.status(400).json({err: 'name is required field'});\r\n        }\r\n        if (!date) {\r\n            return res.status(400).json({err: 'date is required field'});\r\n        }\r\n        if (!price) {\r\n            return res.status(400).json({err: 'price is required field'});\r\n        }\r\n        \r\n        TestResult.create({name, date, price, description})\r\n            .then(testResult => res.json(testResult))\r\n            .catch(err => res.status(500).json(err));\r\n    }\r\n}"]}